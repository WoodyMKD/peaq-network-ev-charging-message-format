// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: charge_point_gateway_format.proto

package gateway

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_BOOT_NOTIFICATION_REQUEST      EventType = 0
	EventType_HEARTBEAT_REQUEST              EventType = 1
	EventType_LOG                            EventType = 2
	EventType_AUTHORIZE_REQUEST              EventType = 3
	EventType_AUTHORIZE_REQUEST_ACK          EventType = 4
	EventType_CHECK_AVAILABILITY_REQUEST     EventType = 5
	EventType_CHECK_AVAILABILITY_REQUEST_ACK EventType = 6
	EventType_START_CHARGE_REQUEST           EventType = 7
	EventType_START_CHARGE_REQUEST_ACK       EventType = 8
	EventType_CHARGE_STATUS                  EventType = 9
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "BOOT_NOTIFICATION_REQUEST",
		1: "HEARTBEAT_REQUEST",
		2: "LOG",
		3: "AUTHORIZE_REQUEST",
		4: "AUTHORIZE_REQUEST_ACK",
		5: "CHECK_AVAILABILITY_REQUEST",
		6: "CHECK_AVAILABILITY_REQUEST_ACK",
		7: "START_CHARGE_REQUEST",
		8: "START_CHARGE_REQUEST_ACK",
		9: "CHARGE_STATUS",
	}
	EventType_value = map[string]int32{
		"BOOT_NOTIFICATION_REQUEST":      0,
		"HEARTBEAT_REQUEST":              1,
		"LOG":                            2,
		"AUTHORIZE_REQUEST":              3,
		"AUTHORIZE_REQUEST_ACK":          4,
		"CHECK_AVAILABILITY_REQUEST":     5,
		"CHECK_AVAILABILITY_REQUEST_ACK": 6,
		"START_CHARGE_REQUEST":           7,
		"START_CHARGE_REQUEST_ACK":       8,
		"CHARGE_STATUS":                  9,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_charge_point_gateway_format_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_charge_point_gateway_format_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_charge_point_gateway_format_proto_rawDescGZIP(), []int{0}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId EventType `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3,enum=gateway.EventType" json:"event_id,omitempty"`
	// Types that are assignable to Data:
	//	*Event_BootNotificationRequestData
	//	*Event_LogData
	//	*Event_AuthorizeRequestData
	//	*Event_AuthorizeRequestAckData
	//	*Event_CheckAvailabilityRequestData
	//	*Event_CheckAvailabilityRequestAckData
	//	*Event_StartChargeRequestData
	//	*Event_StartChargeRequestAckData
	//	*Event_ChargeStatusData
	Data isEvent_Data `protobuf_oneof:"data"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_charge_point_gateway_format_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_charge_point_gateway_format_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_charge_point_gateway_format_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetEventId() EventType {
	if x != nil {
		return x.EventId
	}
	return EventType_BOOT_NOTIFICATION_REQUEST
}

func (m *Event) GetData() isEvent_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Event) GetBootNotificationRequestData() *BootNotificationRequestData {
	if x, ok := x.GetData().(*Event_BootNotificationRequestData); ok {
		return x.BootNotificationRequestData
	}
	return nil
}

func (x *Event) GetLogData() *LogData {
	if x, ok := x.GetData().(*Event_LogData); ok {
		return x.LogData
	}
	return nil
}

func (x *Event) GetAuthorizeRequestData() *AuthorizeRequestData {
	if x, ok := x.GetData().(*Event_AuthorizeRequestData); ok {
		return x.AuthorizeRequestData
	}
	return nil
}

func (x *Event) GetAuthorizeRequestAckData() *AuthorizeRequestAckData {
	if x, ok := x.GetData().(*Event_AuthorizeRequestAckData); ok {
		return x.AuthorizeRequestAckData
	}
	return nil
}

func (x *Event) GetCheckAvailabilityRequestData() *CheckAvailabilityRequestData {
	if x, ok := x.GetData().(*Event_CheckAvailabilityRequestData); ok {
		return x.CheckAvailabilityRequestData
	}
	return nil
}

func (x *Event) GetCheckAvailabilityRequestAckData() *CheckAvailabilityRequestAckData {
	if x, ok := x.GetData().(*Event_CheckAvailabilityRequestAckData); ok {
		return x.CheckAvailabilityRequestAckData
	}
	return nil
}

func (x *Event) GetStartChargeRequestData() *StartChargeRequestData {
	if x, ok := x.GetData().(*Event_StartChargeRequestData); ok {
		return x.StartChargeRequestData
	}
	return nil
}

func (x *Event) GetStartChargeRequestAckData() *StartChargeRequestAckData {
	if x, ok := x.GetData().(*Event_StartChargeRequestAckData); ok {
		return x.StartChargeRequestAckData
	}
	return nil
}

func (x *Event) GetChargeStatusData() *ChargingStatusData {
	if x, ok := x.GetData().(*Event_ChargeStatusData); ok {
		return x.ChargeStatusData
	}
	return nil
}

type isEvent_Data interface {
	isEvent_Data()
}

type Event_BootNotificationRequestData struct {
	BootNotificationRequestData *BootNotificationRequestData `protobuf:"bytes,2,opt,name=boot_notification_request_data,json=bootNotificationRequestData,proto3,oneof"`
}

type Event_LogData struct {
	LogData *LogData `protobuf:"bytes,3,opt,name=log_data,json=logData,proto3,oneof"`
}

type Event_AuthorizeRequestData struct {
	AuthorizeRequestData *AuthorizeRequestData `protobuf:"bytes,4,opt,name=authorize_request_data,json=authorizeRequestData,proto3,oneof"`
}

type Event_AuthorizeRequestAckData struct {
	AuthorizeRequestAckData *AuthorizeRequestAckData `protobuf:"bytes,5,opt,name=authorize_request_ack_data,json=authorizeRequestAckData,proto3,oneof"`
}

type Event_CheckAvailabilityRequestData struct {
	CheckAvailabilityRequestData *CheckAvailabilityRequestData `protobuf:"bytes,6,opt,name=check_availability_request_data,json=checkAvailabilityRequestData,proto3,oneof"`
}

type Event_CheckAvailabilityRequestAckData struct {
	CheckAvailabilityRequestAckData *CheckAvailabilityRequestAckData `protobuf:"bytes,7,opt,name=check_availability_request_ack_data,json=checkAvailabilityRequestAckData,proto3,oneof"`
}

type Event_StartChargeRequestData struct {
	StartChargeRequestData *StartChargeRequestData `protobuf:"bytes,8,opt,name=start_charge_request_data,json=startChargeRequestData,proto3,oneof"`
}

type Event_StartChargeRequestAckData struct {
	StartChargeRequestAckData *StartChargeRequestAckData `protobuf:"bytes,9,opt,name=start_charge_request_ack_data,json=startChargeRequestAckData,proto3,oneof"`
}

type Event_ChargeStatusData struct {
	ChargeStatusData *ChargingStatusData `protobuf:"bytes,10,opt,name=charge_status_data,json=chargeStatusData,proto3,oneof"`
}

func (*Event_BootNotificationRequestData) isEvent_Data() {}

func (*Event_LogData) isEvent_Data() {}

func (*Event_AuthorizeRequestData) isEvent_Data() {}

func (*Event_AuthorizeRequestAckData) isEvent_Data() {}

func (*Event_CheckAvailabilityRequestData) isEvent_Data() {}

func (*Event_CheckAvailabilityRequestAckData) isEvent_Data() {}

func (*Event_StartChargeRequestData) isEvent_Data() {}

func (*Event_StartChargeRequestAckData) isEvent_Data() {}

func (*Event_ChargeStatusData) isEvent_Data() {}

type BootNotificationRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChargeBoxSerialNumber   string `protobuf:"bytes,1,opt,name=charge_box_serial_number,json=chargeBoxSerialNumber,proto3" json:"charge_box_serial_number,omitempty"`
	ChargePointModel        string `protobuf:"bytes,2,opt,name=charge_point_model,json=chargePointModel,proto3" json:"charge_point_model,omitempty"`
	ChargePointSerialNumber string `protobuf:"bytes,3,opt,name=Charge_point_serial_number,json=ChargePointSerialNumber,proto3" json:"Charge_point_serial_number,omitempty"`
	ChargePointVendor       string `protobuf:"bytes,4,opt,name=Charge_point_vendor,json=ChargePointVendor,proto3" json:"Charge_point_vendor,omitempty"`
	FirmwareVersion         string `protobuf:"bytes,5,opt,name=firmware_version,json=firmwareVersion,proto3" json:"firmware_version,omitempty"`
	Iccid                   string `protobuf:"bytes,6,opt,name=iccid,proto3" json:"iccid,omitempty"`
	Imsi                    string `protobuf:"bytes,7,opt,name=imsi,proto3" json:"imsi,omitempty"`
	MeterSerialNumber       string `protobuf:"bytes,8,opt,name=meter_serial_number,json=meterSerialNumber,proto3" json:"meter_serial_number,omitempty"`
	MeterType               string `protobuf:"bytes,9,opt,name=meter_type,json=meterType,proto3" json:"meter_type,omitempty"`
}

func (x *BootNotificationRequestData) Reset() {
	*x = BootNotificationRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_charge_point_gateway_format_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootNotificationRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootNotificationRequestData) ProtoMessage() {}

func (x *BootNotificationRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_charge_point_gateway_format_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootNotificationRequestData.ProtoReflect.Descriptor instead.
func (*BootNotificationRequestData) Descriptor() ([]byte, []int) {
	return file_charge_point_gateway_format_proto_rawDescGZIP(), []int{1}
}

func (x *BootNotificationRequestData) GetChargeBoxSerialNumber() string {
	if x != nil {
		return x.ChargeBoxSerialNumber
	}
	return ""
}

func (x *BootNotificationRequestData) GetChargePointModel() string {
	if x != nil {
		return x.ChargePointModel
	}
	return ""
}

func (x *BootNotificationRequestData) GetChargePointSerialNumber() string {
	if x != nil {
		return x.ChargePointSerialNumber
	}
	return ""
}

func (x *BootNotificationRequestData) GetChargePointVendor() string {
	if x != nil {
		return x.ChargePointVendor
	}
	return ""
}

func (x *BootNotificationRequestData) GetFirmwareVersion() string {
	if x != nil {
		return x.FirmwareVersion
	}
	return ""
}

func (x *BootNotificationRequestData) GetIccid() string {
	if x != nil {
		return x.Iccid
	}
	return ""
}

func (x *BootNotificationRequestData) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *BootNotificationRequestData) GetMeterSerialNumber() string {
	if x != nil {
		return x.MeterSerialNumber
	}
	return ""
}

func (x *BootNotificationRequestData) GetMeterType() string {
	if x != nil {
		return x.MeterType
	}
	return ""
}

type LogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTime string    `protobuf:"bytes,1,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
	Resp        *Response `protobuf:"bytes,2,opt,name=resp,proto3" json:"resp,omitempty"`
}

func (x *LogData) Reset() {
	*x = LogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_charge_point_gateway_format_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogData) ProtoMessage() {}

func (x *LogData) ProtoReflect() protoreflect.Message {
	mi := &file_charge_point_gateway_format_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogData.ProtoReflect.Descriptor instead.
func (*LogData) Descriptor() ([]byte, []int) {
	return file_charge_point_gateway_format_proto_rawDescGZIP(), []int{2}
}

func (x *LogData) GetCurrentTime() string {
	if x != nil {
		return x.CurrentTime
	}
	return ""
}

func (x *LogData) GetResp() *Response {
	if x != nil {
		return x.Resp
	}
	return nil
}

type AuthorizeRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChargePointClientId string `protobuf:"bytes,1,opt,name=charge_point_client_id,json=chargePointClientId,proto3" json:"charge_point_client_id,omitempty"`
	ConsumerPublicKey   string `protobuf:"bytes,2,opt,name=consumer_public_key,json=consumerPublicKey,proto3" json:"consumer_public_key,omitempty"`
}

func (x *AuthorizeRequestData) Reset() {
	*x = AuthorizeRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_charge_point_gateway_format_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequestData) ProtoMessage() {}

func (x *AuthorizeRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_charge_point_gateway_format_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequestData.ProtoReflect.Descriptor instead.
func (*AuthorizeRequestData) Descriptor() ([]byte, []int) {
	return file_charge_point_gateway_format_proto_rawDescGZIP(), []int{3}
}

func (x *AuthorizeRequestData) GetChargePointClientId() string {
	if x != nil {
		return x.ChargePointClientId
	}
	return ""
}

func (x *AuthorizeRequestData) GetConsumerPublicKey() string {
	if x != nil {
		return x.ConsumerPublicKey
	}
	return ""
}

type AuthorizeRequestAckData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerPublicKey string    `protobuf:"bytes,1,opt,name=consumer_public_key,json=consumerPublicKey,proto3" json:"consumer_public_key,omitempty"`
	Resp              *Response `protobuf:"bytes,2,opt,name=resp,proto3" json:"resp,omitempty"`
}

func (x *AuthorizeRequestAckData) Reset() {
	*x = AuthorizeRequestAckData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_charge_point_gateway_format_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeRequestAckData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequestAckData) ProtoMessage() {}

func (x *AuthorizeRequestAckData) ProtoReflect() protoreflect.Message {
	mi := &file_charge_point_gateway_format_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequestAckData.ProtoReflect.Descriptor instead.
func (*AuthorizeRequestAckData) Descriptor() ([]byte, []int) {
	return file_charge_point_gateway_format_proto_rawDescGZIP(), []int{4}
}

func (x *AuthorizeRequestAckData) GetConsumerPublicKey() string {
	if x != nil {
		return x.ConsumerPublicKey
	}
	return ""
}

func (x *AuthorizeRequestAckData) GetResp() *Response {
	if x != nil {
		return x.Resp
	}
	return nil
}

type CheckAvailabilityRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChargePointClientId string `protobuf:"bytes,1,opt,name=charge_point_client_id,json=chargePointClientId,proto3" json:"charge_point_client_id,omitempty"`
	ConnectorId         int32  `protobuf:"varint,2,opt,name=connector_id,json=connectorId,proto3" json:"connector_id,omitempty"`
}

func (x *CheckAvailabilityRequestData) Reset() {
	*x = CheckAvailabilityRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_charge_point_gateway_format_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAvailabilityRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAvailabilityRequestData) ProtoMessage() {}

func (x *CheckAvailabilityRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_charge_point_gateway_format_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAvailabilityRequestData.ProtoReflect.Descriptor instead.
func (*CheckAvailabilityRequestData) Descriptor() ([]byte, []int) {
	return file_charge_point_gateway_format_proto_rawDescGZIP(), []int{5}
}

func (x *CheckAvailabilityRequestData) GetChargePointClientId() string {
	if x != nil {
		return x.ChargePointClientId
	}
	return ""
}

func (x *CheckAvailabilityRequestData) GetConnectorId() int32 {
	if x != nil {
		return x.ConnectorId
	}
	return 0
}

type CheckAvailabilityRequestAckData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Response `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
}

func (x *CheckAvailabilityRequestAckData) Reset() {
	*x = CheckAvailabilityRequestAckData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_charge_point_gateway_format_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAvailabilityRequestAckData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAvailabilityRequestAckData) ProtoMessage() {}

func (x *CheckAvailabilityRequestAckData) ProtoReflect() protoreflect.Message {
	mi := &file_charge_point_gateway_format_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAvailabilityRequestAckData.ProtoReflect.Descriptor instead.
func (*CheckAvailabilityRequestAckData) Descriptor() ([]byte, []int) {
	return file_charge_point_gateway_format_proto_rawDescGZIP(), []int{6}
}

func (x *CheckAvailabilityRequestAckData) GetResp() *Response {
	if x != nil {
		return x.Resp
	}
	return nil
}

type StartChargeRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChargePointClientId string `protobuf:"bytes,1,opt,name=charge_point_client_id,json=chargePointClientId,proto3" json:"charge_point_client_id,omitempty"`
	ConnectorId         int32  `protobuf:"varint,2,opt,name=connector_id,json=connectorId,proto3" json:"connector_id,omitempty"`
	ConsumerPublicKey   string `protobuf:"bytes,3,opt,name=consumer_public_key,json=consumerPublicKey,proto3" json:"consumer_public_key,omitempty"`
}

func (x *StartChargeRequestData) Reset() {
	*x = StartChargeRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_charge_point_gateway_format_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartChargeRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChargeRequestData) ProtoMessage() {}

func (x *StartChargeRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_charge_point_gateway_format_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChargeRequestData.ProtoReflect.Descriptor instead.
func (*StartChargeRequestData) Descriptor() ([]byte, []int) {
	return file_charge_point_gateway_format_proto_rawDescGZIP(), []int{7}
}

func (x *StartChargeRequestData) GetChargePointClientId() string {
	if x != nil {
		return x.ChargePointClientId
	}
	return ""
}

func (x *StartChargeRequestData) GetConnectorId() int32 {
	if x != nil {
		return x.ConnectorId
	}
	return 0
}

func (x *StartChargeRequestData) GetConsumerPublicKey() string {
	if x != nil {
		return x.ConsumerPublicKey
	}
	return ""
}

type StartChargeRequestAckData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerPublicKey string    `protobuf:"bytes,1,opt,name=consumer_public_key,json=consumerPublicKey,proto3" json:"consumer_public_key,omitempty"`
	Resp              *Response `protobuf:"bytes,2,opt,name=resp,proto3" json:"resp,omitempty"`
}

func (x *StartChargeRequestAckData) Reset() {
	*x = StartChargeRequestAckData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_charge_point_gateway_format_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartChargeRequestAckData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChargeRequestAckData) ProtoMessage() {}

func (x *StartChargeRequestAckData) ProtoReflect() protoreflect.Message {
	mi := &file_charge_point_gateway_format_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChargeRequestAckData.ProtoReflect.Descriptor instead.
func (*StartChargeRequestAckData) Descriptor() ([]byte, []int) {
	return file_charge_point_gateway_format_proto_rawDescGZIP(), []int{8}
}

func (x *StartChargeRequestAckData) GetConsumerPublicKey() string {
	if x != nil {
		return x.ConsumerPublicKey
	}
	return ""
}

func (x *StartChargeRequestAckData) GetResp() *Response {
	if x != nil {
		return x.Resp
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_charge_point_gateway_format_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_charge_point_gateway_format_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_charge_point_gateway_format_proto_rawDescGZIP(), []int{9}
}

func (x *Response) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ChargingStatusData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitialBatteryLevel float32 `protobuf:"fixed32,1,opt,name=initial_battery_level,json=initialBatteryLevel,proto3" json:"initial_battery_level,omitempty"`
	BatteryLevel        float32 `protobuf:"fixed32,2,opt,name=battery_level,json=batteryLevel,proto3" json:"battery_level,omitempty"`
	CurrentOffered      float32 `protobuf:"fixed32,3,opt,name=current_offered,json=currentOffered,proto3" json:"current_offered,omitempty"`
	BatteryUnit         string  `protobuf:"bytes,4,opt,name=battery_unit,json=batteryUnit,proto3" json:"battery_unit,omitempty"`
	CurrentUnit         string  `protobuf:"bytes,5,opt,name=current_unit,json=currentUnit,proto3" json:"current_unit,omitempty"`
}

func (x *ChargingStatusData) Reset() {
	*x = ChargingStatusData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_charge_point_gateway_format_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargingStatusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargingStatusData) ProtoMessage() {}

func (x *ChargingStatusData) ProtoReflect() protoreflect.Message {
	mi := &file_charge_point_gateway_format_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargingStatusData.ProtoReflect.Descriptor instead.
func (*ChargingStatusData) Descriptor() ([]byte, []int) {
	return file_charge_point_gateway_format_proto_rawDescGZIP(), []int{10}
}

func (x *ChargingStatusData) GetInitialBatteryLevel() float32 {
	if x != nil {
		return x.InitialBatteryLevel
	}
	return 0
}

func (x *ChargingStatusData) GetBatteryLevel() float32 {
	if x != nil {
		return x.BatteryLevel
	}
	return 0
}

func (x *ChargingStatusData) GetCurrentOffered() float32 {
	if x != nil {
		return x.CurrentOffered
	}
	return 0
}

func (x *ChargingStatusData) GetBatteryUnit() string {
	if x != nil {
		return x.BatteryUnit
	}
	return ""
}

func (x *ChargingStatusData) GetCurrentUnit() string {
	if x != nil {
		return x.CurrentUnit
	}
	return ""
}

var File_charge_point_gateway_format_proto protoreflect.FileDescriptor

var file_charge_point_gateway_format_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x22, 0x8f, 0x07, 0x0a,
	0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x6b, 0x0a, 0x1e, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x1b, 0x62, 0x6f, 0x6f, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x2d, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4c,
	0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x55, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5f, 0x0a, 0x1a, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x63,
	0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x17, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x6e, 0x0a, 0x1f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x1c, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x78, 0x0a, 0x23, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x1f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x5c, 0x0a, 0x19, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x16, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x66, 0x0a, 0x1d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x19,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x12, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x10, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x95,
	0x03, 0x0a, 0x1b, 0x42, 0x6f, 0x6f, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37,
	0x0a, 0x18, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x42, 0x6f, 0x78, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x63, 0x63, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x63,
	0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x53, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x7b, 0x0a, 0x14, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x70, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x76, 0x0a, 0x1c, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x22, 0x48, 0x0a, 0x1f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0xa0, 0x01, 0x0a,
	0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22,
	0x72, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x04,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x72,
	0x65, 0x73, 0x70, 0x22, 0x3a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xdc, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x2a, 0x8b,
	0x02, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19,
	0x42, 0x4f, 0x4f, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x48,
	0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x47, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x41,
	0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x04, 0x12, 0x1e, 0x0a,
	0x1a, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x49, 0x4c,
	0x49, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x05, 0x12, 0x22, 0x0a,
	0x1e, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x49, 0x4c,
	0x49, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x4b, 0x10,
	0x06, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47,
	0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x48, 0x41,
	0x52, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x09, 0x42, 0x57, 0x5a, 0x55,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x61, 0x71, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x70, 0x65, 0x61, 0x71, 0x2d, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2d, 0x65, 0x76, 0x2d, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x2d,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2f, 0x67,
	0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x3b, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_charge_point_gateway_format_proto_rawDescOnce sync.Once
	file_charge_point_gateway_format_proto_rawDescData = file_charge_point_gateway_format_proto_rawDesc
)

func file_charge_point_gateway_format_proto_rawDescGZIP() []byte {
	file_charge_point_gateway_format_proto_rawDescOnce.Do(func() {
		file_charge_point_gateway_format_proto_rawDescData = protoimpl.X.CompressGZIP(file_charge_point_gateway_format_proto_rawDescData)
	})
	return file_charge_point_gateway_format_proto_rawDescData
}

var file_charge_point_gateway_format_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_charge_point_gateway_format_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_charge_point_gateway_format_proto_goTypes = []interface{}{
	(EventType)(0),                          // 0: gateway.EventType
	(*Event)(nil),                           // 1: gateway.Event
	(*BootNotificationRequestData)(nil),     // 2: gateway.BootNotificationRequestData
	(*LogData)(nil),                         // 3: gateway.LogData
	(*AuthorizeRequestData)(nil),            // 4: gateway.AuthorizeRequestData
	(*AuthorizeRequestAckData)(nil),         // 5: gateway.AuthorizeRequestAckData
	(*CheckAvailabilityRequestData)(nil),    // 6: gateway.CheckAvailabilityRequestData
	(*CheckAvailabilityRequestAckData)(nil), // 7: gateway.CheckAvailabilityRequestAckData
	(*StartChargeRequestData)(nil),          // 8: gateway.StartChargeRequestData
	(*StartChargeRequestAckData)(nil),       // 9: gateway.StartChargeRequestAckData
	(*Response)(nil),                        // 10: gateway.Response
	(*ChargingStatusData)(nil),              // 11: gateway.ChargingStatusData
}
var file_charge_point_gateway_format_proto_depIdxs = []int32{
	0,  // 0: gateway.Event.event_id:type_name -> gateway.EventType
	2,  // 1: gateway.Event.boot_notification_request_data:type_name -> gateway.BootNotificationRequestData
	3,  // 2: gateway.Event.log_data:type_name -> gateway.LogData
	4,  // 3: gateway.Event.authorize_request_data:type_name -> gateway.AuthorizeRequestData
	5,  // 4: gateway.Event.authorize_request_ack_data:type_name -> gateway.AuthorizeRequestAckData
	6,  // 5: gateway.Event.check_availability_request_data:type_name -> gateway.CheckAvailabilityRequestData
	7,  // 6: gateway.Event.check_availability_request_ack_data:type_name -> gateway.CheckAvailabilityRequestAckData
	8,  // 7: gateway.Event.start_charge_request_data:type_name -> gateway.StartChargeRequestData
	9,  // 8: gateway.Event.start_charge_request_ack_data:type_name -> gateway.StartChargeRequestAckData
	11, // 9: gateway.Event.charge_status_data:type_name -> gateway.ChargingStatusData
	10, // 10: gateway.LogData.resp:type_name -> gateway.Response
	10, // 11: gateway.AuthorizeRequestAckData.resp:type_name -> gateway.Response
	10, // 12: gateway.CheckAvailabilityRequestAckData.resp:type_name -> gateway.Response
	10, // 13: gateway.StartChargeRequestAckData.resp:type_name -> gateway.Response
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_charge_point_gateway_format_proto_init() }
func file_charge_point_gateway_format_proto_init() {
	if File_charge_point_gateway_format_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_charge_point_gateway_format_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_charge_point_gateway_format_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootNotificationRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_charge_point_gateway_format_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_charge_point_gateway_format_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_charge_point_gateway_format_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeRequestAckData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_charge_point_gateway_format_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAvailabilityRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_charge_point_gateway_format_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAvailabilityRequestAckData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_charge_point_gateway_format_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartChargeRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_charge_point_gateway_format_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartChargeRequestAckData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_charge_point_gateway_format_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_charge_point_gateway_format_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargingStatusData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_charge_point_gateway_format_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Event_BootNotificationRequestData)(nil),
		(*Event_LogData)(nil),
		(*Event_AuthorizeRequestData)(nil),
		(*Event_AuthorizeRequestAckData)(nil),
		(*Event_CheckAvailabilityRequestData)(nil),
		(*Event_CheckAvailabilityRequestAckData)(nil),
		(*Event_StartChargeRequestData)(nil),
		(*Event_StartChargeRequestAckData)(nil),
		(*Event_ChargeStatusData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_charge_point_gateway_format_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_charge_point_gateway_format_proto_goTypes,
		DependencyIndexes: file_charge_point_gateway_format_proto_depIdxs,
		EnumInfos:         file_charge_point_gateway_format_proto_enumTypes,
		MessageInfos:      file_charge_point_gateway_format_proto_msgTypes,
	}.Build()
	File_charge_point_gateway_format_proto = out.File
	file_charge_point_gateway_format_proto_rawDesc = nil
	file_charge_point_gateway_format_proto_goTypes = nil
	file_charge_point_gateway_format_proto_depIdxs = nil
}

syntax = "proto3";

package p2p;
option go_package = "github.com/peaqnetwork/peaq-network-ev-charging-message-format/golang/message;message";

message ChargingStatusData {
  float progress = 1;
  string charging_period = 2;
  string energy_consumption = 3;
  string token_spent = 4;
}

message ServiceAckData { Response resp = 1; }
message ServiceRequestedAckData {
  Response resp = 1;
}

message ServiceRequestedData {
  string consumer = 1;
  string provider = 2;
  string token_deposited = 3;
  int32 connector_id = 4;
}

message ServiceDeliveredData {
  string consumer = 1;
  string provider = 2;
  TransactionValue refund_info = 3;
  TransactionValue spent_info = 4;
}

message StopChargeResponseData { Response resp = 1; }

message IdentityChallengeData { string plain_data = 1; }

message IdentityResponseData {
  Response resp = 1;
  string signature = 3;
}

message Response {
  bool error = 1;
  string message = 2;
}

message TransactionValue {
  string token_num = 1;
  string tx_hash = 2;

  message TimePoint {
    int64 height = 1;
    int64 index = 2;
  }

  TimePoint time_point = 3;
  string call_hash = 4;
}

message ChainEventData {
  string event_id = 1;
  string attributes = 2;
}

message EmitShowInfoData {
  enum ShowInfoType {
    LOG_INFO = 0;
    EVENT_INFO = 1;
  }

  ShowInfoType type = 1;
  string data = 2;
}

message GetBalanceAckData {
  Response resp = 1;
  string balance = 2;
}

message GetPKAckData {
  Response resp = 1;
  string pk = 2;
}

message RePublishDIDAckData {
  Response resp = 1;
  string pk = 2;
}

message ReconnectAckData {
  Response resp = 1;
  string message = 2;
}

message StopChargeData { bool success = 1; }

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: charge_point_gateway_format.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n!charge_point_gateway_format.proto\x12\x07gateway\"\xf2\x04\n\x05\x45vent\x12$\n\x08\x65vent_id\x18\x01 \x01(\x0e\x32\x12.gateway.EventType\x12N\n\x1e\x62oot_notification_request_data\x18\x02 \x01(\x0b\x32$.gateway.BootNotificationRequestDataH\x00\x12$\n\x08log_data\x18\x03 \x01(\x0b\x32\x10.gateway.LogDataH\x00\x12?\n\x16\x61uthorize_request_data\x18\x04 \x01(\x0b\x32\x1d.gateway.AuthorizeRequestDataH\x00\x12\x46\n\x1a\x61uthorize_request_ack_data\x18\x05 \x01(\x0b\x32 .gateway.AuthorizeRequestAckDataH\x00\x12P\n\x1f\x63heck_availability_request_data\x18\x06 \x01(\x0b\x32%.gateway.CheckAvailabilityRequestDataH\x00\x12W\n#check_availability_request_ack_data\x18\x07 \x01(\x0b\x32(.gateway.CheckAvailabilityRequestAckDataH\x00\x12\x44\n\x19start_charge_request_data\x18\x08 \x01(\x0b\x32\x1f.gateway.StartChargeRequestDataH\x00\x12K\n\x1dstart_charge_request_ack_data\x18\t \x01(\x0b\x32\".gateway.StartChargeRequestAckDataH\x00\x42\x06\n\x04\x64\x61ta\"\x84\x02\n\x1b\x42ootNotificationRequestData\x12 \n\x18\x63harge_box_serial_number\x18\x01 \x01(\t\x12\x1a\n\x12\x63harge_point_model\x18\x02 \x01(\t\x12\"\n\x1a\x43harge_point_serial_number\x18\x03 \x01(\t\x12\x1b\n\x13\x43harge_point_vendor\x18\x04 \x01(\t\x12\x18\n\x10\x66irmware_version\x18\x05 \x01(\t\x12\r\n\x05iccid\x18\x06 \x01(\t\x12\x0c\n\x04imsi\x18\x07 \x01(\t\x12\x1b\n\x13meter_serial_number\x18\x08 \x01(\t\x12\x12\n\nmeter_type\x18\t \x01(\t\"@\n\x07LogData\x12\x14\n\x0c\x63urrent_time\x18\x01 \x01(\t\x12\x1f\n\x04resp\x18\x02 \x01(\x0b\x32\x11.gateway.Response\"S\n\x14\x41uthorizeRequestData\x12\x1e\n\x16\x63harge_point_client_id\x18\x01 \x01(\t\x12\x1b\n\x13\x63onsumer_public_key\x18\x02 \x01(\t\"W\n\x17\x41uthorizeRequestAckData\x12\x1b\n\x13\x63onsumer_public_key\x18\x01 \x01(\t\x12\x1f\n\x04resp\x18\x02 \x01(\x0b\x32\x11.gateway.Response\"T\n\x1c\x43heckAvailabilityRequestData\x12\x1e\n\x16\x63harge_point_client_id\x18\x01 \x01(\t\x12\x14\n\x0c\x63onnector_id\x18\x02 \x01(\x05\"B\n\x1f\x43heckAvailabilityRequestAckData\x12\x1f\n\x04resp\x18\x01 \x01(\x0b\x32\x11.gateway.Response\"k\n\x16StartChargeRequestData\x12\x1e\n\x16\x63harge_point_client_id\x18\x01 \x01(\t\x12\x14\n\x0c\x63onnector_id\x18\x02 \x01(\x05\x12\x1b\n\x13\x63onsumer_public_key\x18\x03 \x01(\t\"Y\n\x19StartChargeRequestAckData\x12\x1b\n\x13\x63onsumer_public_key\x18\x01 \x01(\t\x12\x1f\n\x04resp\x18\x02 \x01(\x0b\x32\x11.gateway.Response\"*\n\x08Response\x12\r\n\x05\x65rror\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t*\xe8\x01\n\tEventType\x12\x1b\n\x17\x42ootNotificationRequest\x10\x00\x12\x14\n\x10HeartbeatRequest\x10\x01\x12\x07\n\x03Log\x10\x02\x12\x14\n\x10\x41uthorizeRequest\x10\x03\x12\x17\n\x13\x41uthorizeRequestAck\x10\x04\x12\x1c\n\x18\x43heckAvailabilityRequest\x10\x05\x12\x1f\n\x1b\x43heckAvailabilityRequestAck\x10\x06\x12\x16\n\x12StartChargeRequest\x10\x07\x12\x19\n\x15StartChargeRequestAck\x10\x08\x42WZUgithub.com/peaqnetwork/peaq-network-ev-charging-message-format/golang/gateway;gatewayb\x06proto3')

_EVENTTYPE = DESCRIPTOR.enum_types_by_name['EventType']
EventType = enum_type_wrapper.EnumTypeWrapper(_EVENTTYPE)
BootNotificationRequest = 0
HeartbeatRequest = 1
Log = 2
AuthorizeRequest = 3
AuthorizeRequestAck = 4
CheckAvailabilityRequest = 5
CheckAvailabilityRequestAck = 6
StartChargeRequest = 7
StartChargeRequestAck = 8


_EVENT = DESCRIPTOR.message_types_by_name['Event']
_BOOTNOTIFICATIONREQUESTDATA = DESCRIPTOR.message_types_by_name['BootNotificationRequestData']
_LOGDATA = DESCRIPTOR.message_types_by_name['LogData']
_AUTHORIZEREQUESTDATA = DESCRIPTOR.message_types_by_name['AuthorizeRequestData']
_AUTHORIZEREQUESTACKDATA = DESCRIPTOR.message_types_by_name['AuthorizeRequestAckData']
_CHECKAVAILABILITYREQUESTDATA = DESCRIPTOR.message_types_by_name['CheckAvailabilityRequestData']
_CHECKAVAILABILITYREQUESTACKDATA = DESCRIPTOR.message_types_by_name['CheckAvailabilityRequestAckData']
_STARTCHARGEREQUESTDATA = DESCRIPTOR.message_types_by_name['StartChargeRequestData']
_STARTCHARGEREQUESTACKDATA = DESCRIPTOR.message_types_by_name['StartChargeRequestAckData']
_RESPONSE = DESCRIPTOR.message_types_by_name['Response']
Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), {
  'DESCRIPTOR' : _EVENT,
  '__module__' : 'charge_point_gateway_format_pb2'
  # @@protoc_insertion_point(class_scope:gateway.Event)
  })
_sym_db.RegisterMessage(Event)

BootNotificationRequestData = _reflection.GeneratedProtocolMessageType('BootNotificationRequestData', (_message.Message,), {
  'DESCRIPTOR' : _BOOTNOTIFICATIONREQUESTDATA,
  '__module__' : 'charge_point_gateway_format_pb2'
  # @@protoc_insertion_point(class_scope:gateway.BootNotificationRequestData)
  })
_sym_db.RegisterMessage(BootNotificationRequestData)

LogData = _reflection.GeneratedProtocolMessageType('LogData', (_message.Message,), {
  'DESCRIPTOR' : _LOGDATA,
  '__module__' : 'charge_point_gateway_format_pb2'
  # @@protoc_insertion_point(class_scope:gateway.LogData)
  })
_sym_db.RegisterMessage(LogData)

AuthorizeRequestData = _reflection.GeneratedProtocolMessageType('AuthorizeRequestData', (_message.Message,), {
  'DESCRIPTOR' : _AUTHORIZEREQUESTDATA,
  '__module__' : 'charge_point_gateway_format_pb2'
  # @@protoc_insertion_point(class_scope:gateway.AuthorizeRequestData)
  })
_sym_db.RegisterMessage(AuthorizeRequestData)

AuthorizeRequestAckData = _reflection.GeneratedProtocolMessageType('AuthorizeRequestAckData', (_message.Message,), {
  'DESCRIPTOR' : _AUTHORIZEREQUESTACKDATA,
  '__module__' : 'charge_point_gateway_format_pb2'
  # @@protoc_insertion_point(class_scope:gateway.AuthorizeRequestAckData)
  })
_sym_db.RegisterMessage(AuthorizeRequestAckData)

CheckAvailabilityRequestData = _reflection.GeneratedProtocolMessageType('CheckAvailabilityRequestData', (_message.Message,), {
  'DESCRIPTOR' : _CHECKAVAILABILITYREQUESTDATA,
  '__module__' : 'charge_point_gateway_format_pb2'
  # @@protoc_insertion_point(class_scope:gateway.CheckAvailabilityRequestData)
  })
_sym_db.RegisterMessage(CheckAvailabilityRequestData)

CheckAvailabilityRequestAckData = _reflection.GeneratedProtocolMessageType('CheckAvailabilityRequestAckData', (_message.Message,), {
  'DESCRIPTOR' : _CHECKAVAILABILITYREQUESTACKDATA,
  '__module__' : 'charge_point_gateway_format_pb2'
  # @@protoc_insertion_point(class_scope:gateway.CheckAvailabilityRequestAckData)
  })
_sym_db.RegisterMessage(CheckAvailabilityRequestAckData)

StartChargeRequestData = _reflection.GeneratedProtocolMessageType('StartChargeRequestData', (_message.Message,), {
  'DESCRIPTOR' : _STARTCHARGEREQUESTDATA,
  '__module__' : 'charge_point_gateway_format_pb2'
  # @@protoc_insertion_point(class_scope:gateway.StartChargeRequestData)
  })
_sym_db.RegisterMessage(StartChargeRequestData)

StartChargeRequestAckData = _reflection.GeneratedProtocolMessageType('StartChargeRequestAckData', (_message.Message,), {
  'DESCRIPTOR' : _STARTCHARGEREQUESTACKDATA,
  '__module__' : 'charge_point_gateway_format_pb2'
  # @@protoc_insertion_point(class_scope:gateway.StartChargeRequestAckData)
  })
_sym_db.RegisterMessage(StartChargeRequestAckData)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSE,
  '__module__' : 'charge_point_gateway_format_pb2'
  # @@protoc_insertion_point(class_scope:gateway.Response)
  })
_sym_db.RegisterMessage(Response)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'ZUgithub.com/peaqnetwork/peaq-network-ev-charging-message-format/golang/gateway;gateway'
  _EVENTTYPE._serialized_start=1577
  _EVENTTYPE._serialized_end=1809
  _EVENT._serialized_start=47
  _EVENT._serialized_end=673
  _BOOTNOTIFICATIONREQUESTDATA._serialized_start=676
  _BOOTNOTIFICATIONREQUESTDATA._serialized_end=936
  _LOGDATA._serialized_start=938
  _LOGDATA._serialized_end=1002
  _AUTHORIZEREQUESTDATA._serialized_start=1004
  _AUTHORIZEREQUESTDATA._serialized_end=1087
  _AUTHORIZEREQUESTACKDATA._serialized_start=1089
  _AUTHORIZEREQUESTACKDATA._serialized_end=1176
  _CHECKAVAILABILITYREQUESTDATA._serialized_start=1178
  _CHECKAVAILABILITYREQUESTDATA._serialized_end=1262
  _CHECKAVAILABILITYREQUESTACKDATA._serialized_start=1264
  _CHECKAVAILABILITYREQUESTACKDATA._serialized_end=1330
  _STARTCHARGEREQUESTDATA._serialized_start=1332
  _STARTCHARGEREQUESTDATA._serialized_end=1439
  _STARTCHARGEREQUESTACKDATA._serialized_start=1441
  _STARTCHARGEREQUESTACKDATA._serialized_end=1530
  _RESPONSE._serialized_start=1532
  _RESPONSE._serialized_end=1574
# @@protoc_insertion_point(module_scope)

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: base_event_format.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import charge_point_gateway_format_pb2 as charge__point__gateway__format__pb2
import p2p_message_format_pb2 as p2p__message__format__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x17\x62\x61se_event_format.proto\x12\x06\x65vents\x1a!charge_point_gateway_format.proto\x1a\x18p2p_message_format.proto\"\xe9\r\n\x05\x45vent\x12#\n\x08\x65vent_id\x18\x01 \x01(\x0e\x32\x11.events.EventType\x12\x37\n\x14\x63harging_status_data\x18\x02 \x01(\x0b\x32\x17.p2p.ChargingStatusDataH\x00\x12/\n\x10service_ack_data\x18\x03 \x01(\x0b\x32\x13.p2p.ServiceAckDataH\x00\x12;\n\x16service_requested_data\x18\x04 \x01(\x0b\x32\x19.p2p.ServiceRequestedDataH\x00\x12;\n\x16service_delivered_data\x18\x05 \x01(\x0b\x32\x19.p2p.ServiceDeliveredDataH\x00\x12/\n\x10stop_charge_data\x18\x06 \x01(\x0b\x32\x13.p2p.StopChargeDataH\x00\x12<\n\x15stop_charge_resp_data\x18\x07 \x01(\x0b\x32\x1b.p2p.StopChargeResponseDataH\x00\x12=\n\x17identity_challenge_data\x18\x08 \x01(\x0b\x32\x1a.p2p.IdentityChallengeDataH\x00\x12;\n\x16identity_response_data\x18\t \x01(\x0b\x32\x19.p2p.IdentityResponseDataH\x00\x12/\n\x10\x63hain_event_data\x18\n \x01(\x0b\x32\x13.p2p.ChainEventDataH\x00\x12\x34\n\x13\x65mit_show_info_data\x18\x0b \x01(\x0b\x32\x15.p2p.EmitShowInfoDataH\x00\x12\x36\n\x14get_balance_ack_data\x18\x0c \x01(\x0b\x32\x16.p2p.GetBalanceAckDataH\x00\x12,\n\x0fget_pk_ack_data\x18\r \x01(\x0b\x32\x11.p2p.GetPKAckDataH\x00\x12\x36\n\x12republish_ack_data\x18\x0e \x01(\x0b\x32\x18.p2p.RePublishDIDAckDataH\x00\x12\x33\n\x12reconnect_ack_data\x18\x0f \x01(\x0b\x32\x15.p2p.ReconnectAckDataH\x00\x12\x42\n\x1aservice_requested_ack_data\x18\x10 \x01(\x0b\x32\x1c.p2p.ServiceRequestedAckDataH\x00\x12N\n\x1e\x62oot_notification_request_data\x18\x11 \x01(\x0b\x32$.gateway.BootNotificationRequestDataH\x00\x12$\n\x08log_data\x18\x12 \x01(\x0b\x32\x10.gateway.LogDataH\x00\x12?\n\x16\x61uthorize_request_data\x18\x13 \x01(\x0b\x32\x1d.gateway.AuthorizeRequestDataH\x00\x12\x41\n\x17\x61uthorize_response_data\x18\x14 \x01(\x0b\x32\x1e.gateway.AuthorizeResponseDataH\x00\x12P\n\x1f\x63heck_availability_request_data\x18\x15 \x01(\x0b\x32%.gateway.CheckAvailabilityRequestDataH\x00\x12R\n check_availability_response_data\x18\x16 \x01(\x0b\x32&.gateway.CheckAvailabilityResponseDataH\x00\x12\x44\n\x19start_charge_request_data\x18\x18 \x01(\x0b\x32\x1f.gateway.StartChargeRequestDataH\x00\x12\x46\n\x1astart_charge_response_data\x18\x19 \x01(\x0b\x32 .gateway.StartChargeResponseDataH\x00\x12>\n\x15\x65v_charge_status_data\x18\x1a \x01(\x0b\x32\x1d.gateway.EVChargingStatusDataH\x00\x12L\n\x1dstop_transaction_request_data\x18\x1b \x01(\x0b\x32#.gateway.StopTransactionRequestDataH\x00\x12N\n\x1estop_transaction_response_data\x18\x1c \x01(\x0b\x32$.gateway.StopTransactionResponseDataH\x00\x12Z\n%notify_charge_point_state_change_data\x18\x1d \x01(\x0b\x32).gateway.NotifyChargePointStateChangeDataH\x00\x42\x06\n\x04\x64\x61ta*\xc7\x06\n\tEventType\x12\x13\n\x0f\x43HARGING_STATUS\x10\x00\x12\x17\n\x13SERVICE_REQUEST_ACK\x10\x01\x12\x18\n\x14SERVICE_DELIVERY_ACK\x10\x02\x12\x15\n\x11SERVICE_REQUESTED\x10\x03\x12\x15\n\x11SERVICE_DELIVERED\x10\x04\x12\x17\n\x13STOP_CHARGE_REQUEST\x10\x05\x12\x18\n\x14STOP_CHARGE_RESPONSE\x10\x06\x12\x16\n\x12IDENTITY_CHALLENGE\x10\x07\x12\x15\n\x11IDENTITY_RESPONSE\x10\x08\x12\x17\n\x13RECEIVE_CHAIN_EVENT\x10\t\x12\x12\n\x0e\x45MIT_SHOW_INFO\x10\n\x12\x0f\n\x0bGET_BALANCE\x10\x0b\x12\x13\n\x0fGET_BALANCE_ACK\x10\x0c\x12\n\n\x06GET_PK\x10\r\x12\x0e\n\nGET_PK_ACK\x10\x0e\x12\x11\n\rREPUBLISH_DID\x10\x0f\x12\x15\n\x11REPUBLISH_DID_ACK\x10\x10\x12\r\n\tRECONNECT\x10\x11\x12\x11\n\rRECONNECT_ACK\x10\x12\x12\x12\n\x0ePEER_CONNECTED\x10\x13\x12\x13\n\x0fPEER_SUBSCRIBED\x10\x14\x12\x1a\n\x16PEER_CONNECTION_FAILED\x10\x15\x12\x1c\n\x18PEER_SUBSCRIPTION_FAILED\x10\x16\x12\x1d\n\x19\x42OOT_NOTIFICATION_REQUEST\x10\x17\x12\x07\n\x03LOG\x10\x18\x12\x15\n\x11\x41UTHORIZE_REQUEST\x10\x19\x12\x16\n\x12\x41UTHORIZE_RESPONSE\x10\x1a\x12\x1e\n\x1a\x43HECK_AVAILABILITY_REQUEST\x10\x1b\x12\x1f\n\x1b\x43HECK_AVAILABILITY_RESPONSE\x10\x1c\x12\x18\n\x14START_CHARGE_REQUEST\x10\x1d\x12\x19\n\x15START_CHARGE_RESPONSE\x10\x1e\x12\x14\n\x10\x45V_CHARGE_STATUS\x10\x1f\x12$\n NOTIFY_CHARGE_POINT_STATE_CHANGE\x10 \x12\x1c\n\x18STOP_TRANSACTION_REQUEST\x10!\x12\x1d\n\x19STOP_TRANSACTION_RESPONSE\x10\"BUZSgithub.com/peaqnetwork/peaq-network-ev-charging-message-format/golang/events;eventsb\x06proto3')

_EVENTTYPE = DESCRIPTOR.enum_types_by_name['EventType']
EventType = enum_type_wrapper.EnumTypeWrapper(_EVENTTYPE)
CHARGING_STATUS = 0
SERVICE_REQUEST_ACK = 1
SERVICE_DELIVERY_ACK = 2
SERVICE_REQUESTED = 3
SERVICE_DELIVERED = 4
STOP_CHARGE_REQUEST = 5
STOP_CHARGE_RESPONSE = 6
IDENTITY_CHALLENGE = 7
IDENTITY_RESPONSE = 8
RECEIVE_CHAIN_EVENT = 9
EMIT_SHOW_INFO = 10
GET_BALANCE = 11
GET_BALANCE_ACK = 12
GET_PK = 13
GET_PK_ACK = 14
REPUBLISH_DID = 15
REPUBLISH_DID_ACK = 16
RECONNECT = 17
RECONNECT_ACK = 18
PEER_CONNECTED = 19
PEER_SUBSCRIBED = 20
PEER_CONNECTION_FAILED = 21
PEER_SUBSCRIPTION_FAILED = 22
BOOT_NOTIFICATION_REQUEST = 23
LOG = 24
AUTHORIZE_REQUEST = 25
AUTHORIZE_RESPONSE = 26
CHECK_AVAILABILITY_REQUEST = 27
CHECK_AVAILABILITY_RESPONSE = 28
START_CHARGE_REQUEST = 29
START_CHARGE_RESPONSE = 30
EV_CHARGE_STATUS = 31
NOTIFY_CHARGE_POINT_STATE_CHANGE = 32
STOP_TRANSACTION_REQUEST = 33
STOP_TRANSACTION_RESPONSE = 34


_EVENT = DESCRIPTOR.message_types_by_name['Event']
Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), {
  'DESCRIPTOR' : _EVENT,
  '__module__' : 'base_event_format_pb2'
  # @@protoc_insertion_point(class_scope:events.Event)
  })
_sym_db.RegisterMessage(Event)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'ZSgithub.com/peaqnetwork/peaq-network-ev-charging-message-format/golang/events;events'
  _EVENTTYPE._serialized_start=1869
  _EVENTTYPE._serialized_end=2708
  _EVENT._serialized_start=97
  _EVENT._serialized_end=1866
# @@protoc_insertion_point(module_scope)

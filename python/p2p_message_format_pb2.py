# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: p2p_message_format.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18p2p_message_format.proto\x12\x03p2p\"p\n\x12\x43hargingStatusData\x12\x10\n\x08progress\x18\x01 \x01(\x02\x12\x17\n\x0f\x63harging_period\x18\x02 \x01(\t\x12\x1a\n\x12\x65nergy_consumption\x18\x03 \x01(\t\x12\x13\n\x0btoken_spent\x18\x04 \x01(\t\"-\n\x0eServiceAckData\x12\x1b\n\x04resp\x18\x01 \x01(\x0b\x32\r.p2p.Response\"6\n\x17ServiceRequestedAckData\x12\x1b\n\x04resp\x18\x01 \x01(\x0b\x32\r.p2p.Response\"i\n\x14ServiceRequestedData\x12\x10\n\x08\x63onsumer\x18\x01 \x01(\t\x12\x10\n\x08provider\x18\x02 \x01(\t\x12\x17\n\x0ftoken_deposited\x18\x03 \x01(\t\x12\x14\n\x0c\x63onnector_id\x18\x04 \x01(\x05\"\x91\x01\n\x14ServiceDeliveredData\x12\x10\n\x08\x63onsumer\x18\x01 \x01(\t\x12\x10\n\x08provider\x18\x02 \x01(\t\x12*\n\x0brefund_info\x18\x03 \x01(\x0b\x32\x15.p2p.TransactionValue\x12)\n\nspent_info\x18\x04 \x01(\x0b\x32\x15.p2p.TransactionValue\"5\n\x16StopChargeResponseData\x12\x1b\n\x04resp\x18\x01 \x01(\x0b\x32\r.p2p.Response\"+\n\x15IdentityChallengeData\x12\x12\n\nplain_data\x18\x01 \x01(\t\"F\n\x14IdentityResponseData\x12\x1b\n\x04resp\x18\x01 \x01(\x0b\x32\r.p2p.Response\x12\x11\n\tsignature\x18\x03 \x01(\t\"*\n\x08Response\x12\r\n\x05\x65rror\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"\xaa\x01\n\x10TransactionValue\x12\x11\n\ttoken_num\x18\x01 \x01(\t\x12\x0f\n\x07tx_hash\x18\x02 \x01(\t\x12\x33\n\ntime_point\x18\x03 \x01(\x0b\x32\x1f.p2p.TransactionValue.TimePoint\x12\x11\n\tcall_hash\x18\x04 \x01(\t\x1a*\n\tTimePoint\x12\x0e\n\x06height\x18\x01 \x01(\x03\x12\r\n\x05index\x18\x02 \x01(\x03\"6\n\x0e\x43hainEventData\x12\x10\n\x08\x65vent_id\x18\x01 \x01(\t\x12\x12\n\nattributes\x18\x02 \x01(\t\"\x80\x01\n\x10\x45mitShowInfoData\x12\x30\n\x04type\x18\x01 \x01(\x0e\x32\".p2p.EmitShowInfoData.ShowInfoType\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\t\",\n\x0cShowInfoType\x12\x0c\n\x08LOG_INFO\x10\x00\x12\x0e\n\nEVENT_INFO\x10\x01\"A\n\x11GetBalanceAckData\x12\x1b\n\x04resp\x18\x01 \x01(\x0b\x32\r.p2p.Response\x12\x0f\n\x07\x62\x61lance\x18\x02 \x01(\t\"7\n\x0cGetPKAckData\x12\x1b\n\x04resp\x18\x01 \x01(\x0b\x32\r.p2p.Response\x12\n\n\x02pk\x18\x02 \x01(\t\">\n\x13RePublishDIDAckData\x12\x1b\n\x04resp\x18\x01 \x01(\x0b\x32\r.p2p.Response\x12\n\n\x02pk\x18\x02 \x01(\t\"@\n\x10ReconnectAckData\x12\x1b\n\x04resp\x18\x01 \x01(\x0b\x32\r.p2p.Response\x12\x0f\n\x07message\x18\x02 \x01(\t\"!\n\x0eStopChargeData\x12\x0f\n\x07success\x18\x01 \x01(\x08\x42WZUgithub.com/peaqnetwork/peaq-network-ev-charging-message-format/golang/message;messageb\x06proto3')



_CHARGINGSTATUSDATA = DESCRIPTOR.message_types_by_name['ChargingStatusData']
_SERVICEACKDATA = DESCRIPTOR.message_types_by_name['ServiceAckData']
_SERVICEREQUESTEDACKDATA = DESCRIPTOR.message_types_by_name['ServiceRequestedAckData']
_SERVICEREQUESTEDDATA = DESCRIPTOR.message_types_by_name['ServiceRequestedData']
_SERVICEDELIVEREDDATA = DESCRIPTOR.message_types_by_name['ServiceDeliveredData']
_STOPCHARGERESPONSEDATA = DESCRIPTOR.message_types_by_name['StopChargeResponseData']
_IDENTITYCHALLENGEDATA = DESCRIPTOR.message_types_by_name['IdentityChallengeData']
_IDENTITYRESPONSEDATA = DESCRIPTOR.message_types_by_name['IdentityResponseData']
_RESPONSE = DESCRIPTOR.message_types_by_name['Response']
_TRANSACTIONVALUE = DESCRIPTOR.message_types_by_name['TransactionValue']
_TRANSACTIONVALUE_TIMEPOINT = _TRANSACTIONVALUE.nested_types_by_name['TimePoint']
_CHAINEVENTDATA = DESCRIPTOR.message_types_by_name['ChainEventData']
_EMITSHOWINFODATA = DESCRIPTOR.message_types_by_name['EmitShowInfoData']
_GETBALANCEACKDATA = DESCRIPTOR.message_types_by_name['GetBalanceAckData']
_GETPKACKDATA = DESCRIPTOR.message_types_by_name['GetPKAckData']
_REPUBLISHDIDACKDATA = DESCRIPTOR.message_types_by_name['RePublishDIDAckData']
_RECONNECTACKDATA = DESCRIPTOR.message_types_by_name['ReconnectAckData']
_STOPCHARGEDATA = DESCRIPTOR.message_types_by_name['StopChargeData']
_EMITSHOWINFODATA_SHOWINFOTYPE = _EMITSHOWINFODATA.enum_types_by_name['ShowInfoType']
ChargingStatusData = _reflection.GeneratedProtocolMessageType('ChargingStatusData', (_message.Message,), {
  'DESCRIPTOR' : _CHARGINGSTATUSDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.ChargingStatusData)
  })
_sym_db.RegisterMessage(ChargingStatusData)

ServiceAckData = _reflection.GeneratedProtocolMessageType('ServiceAckData', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEACKDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.ServiceAckData)
  })
_sym_db.RegisterMessage(ServiceAckData)

ServiceRequestedAckData = _reflection.GeneratedProtocolMessageType('ServiceRequestedAckData', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEREQUESTEDACKDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.ServiceRequestedAckData)
  })
_sym_db.RegisterMessage(ServiceRequestedAckData)

ServiceRequestedData = _reflection.GeneratedProtocolMessageType('ServiceRequestedData', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEREQUESTEDDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.ServiceRequestedData)
  })
_sym_db.RegisterMessage(ServiceRequestedData)

ServiceDeliveredData = _reflection.GeneratedProtocolMessageType('ServiceDeliveredData', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEDELIVEREDDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.ServiceDeliveredData)
  })
_sym_db.RegisterMessage(ServiceDeliveredData)

StopChargeResponseData = _reflection.GeneratedProtocolMessageType('StopChargeResponseData', (_message.Message,), {
  'DESCRIPTOR' : _STOPCHARGERESPONSEDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.StopChargeResponseData)
  })
_sym_db.RegisterMessage(StopChargeResponseData)

IdentityChallengeData = _reflection.GeneratedProtocolMessageType('IdentityChallengeData', (_message.Message,), {
  'DESCRIPTOR' : _IDENTITYCHALLENGEDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.IdentityChallengeData)
  })
_sym_db.RegisterMessage(IdentityChallengeData)

IdentityResponseData = _reflection.GeneratedProtocolMessageType('IdentityResponseData', (_message.Message,), {
  'DESCRIPTOR' : _IDENTITYRESPONSEDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.IdentityResponseData)
  })
_sym_db.RegisterMessage(IdentityResponseData)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSE,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.Response)
  })
_sym_db.RegisterMessage(Response)

TransactionValue = _reflection.GeneratedProtocolMessageType('TransactionValue', (_message.Message,), {

  'TimePoint' : _reflection.GeneratedProtocolMessageType('TimePoint', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTIONVALUE_TIMEPOINT,
    '__module__' : 'p2p_message_format_pb2'
    # @@protoc_insertion_point(class_scope:p2p.TransactionValue.TimePoint)
    })
  ,
  'DESCRIPTOR' : _TRANSACTIONVALUE,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.TransactionValue)
  })
_sym_db.RegisterMessage(TransactionValue)
_sym_db.RegisterMessage(TransactionValue.TimePoint)

ChainEventData = _reflection.GeneratedProtocolMessageType('ChainEventData', (_message.Message,), {
  'DESCRIPTOR' : _CHAINEVENTDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.ChainEventData)
  })
_sym_db.RegisterMessage(ChainEventData)

EmitShowInfoData = _reflection.GeneratedProtocolMessageType('EmitShowInfoData', (_message.Message,), {
  'DESCRIPTOR' : _EMITSHOWINFODATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.EmitShowInfoData)
  })
_sym_db.RegisterMessage(EmitShowInfoData)

GetBalanceAckData = _reflection.GeneratedProtocolMessageType('GetBalanceAckData', (_message.Message,), {
  'DESCRIPTOR' : _GETBALANCEACKDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.GetBalanceAckData)
  })
_sym_db.RegisterMessage(GetBalanceAckData)

GetPKAckData = _reflection.GeneratedProtocolMessageType('GetPKAckData', (_message.Message,), {
  'DESCRIPTOR' : _GETPKACKDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.GetPKAckData)
  })
_sym_db.RegisterMessage(GetPKAckData)

RePublishDIDAckData = _reflection.GeneratedProtocolMessageType('RePublishDIDAckData', (_message.Message,), {
  'DESCRIPTOR' : _REPUBLISHDIDACKDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.RePublishDIDAckData)
  })
_sym_db.RegisterMessage(RePublishDIDAckData)

ReconnectAckData = _reflection.GeneratedProtocolMessageType('ReconnectAckData', (_message.Message,), {
  'DESCRIPTOR' : _RECONNECTACKDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.ReconnectAckData)
  })
_sym_db.RegisterMessage(ReconnectAckData)

StopChargeData = _reflection.GeneratedProtocolMessageType('StopChargeData', (_message.Message,), {
  'DESCRIPTOR' : _STOPCHARGEDATA,
  '__module__' : 'p2p_message_format_pb2'
  # @@protoc_insertion_point(class_scope:p2p.StopChargeData)
  })
_sym_db.RegisterMessage(StopChargeData)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'ZUgithub.com/peaqnetwork/peaq-network-ev-charging-message-format/golang/message;message'
  _CHARGINGSTATUSDATA._serialized_start=33
  _CHARGINGSTATUSDATA._serialized_end=145
  _SERVICEACKDATA._serialized_start=147
  _SERVICEACKDATA._serialized_end=192
  _SERVICEREQUESTEDACKDATA._serialized_start=194
  _SERVICEREQUESTEDACKDATA._serialized_end=248
  _SERVICEREQUESTEDDATA._serialized_start=250
  _SERVICEREQUESTEDDATA._serialized_end=355
  _SERVICEDELIVEREDDATA._serialized_start=358
  _SERVICEDELIVEREDDATA._serialized_end=503
  _STOPCHARGERESPONSEDATA._serialized_start=505
  _STOPCHARGERESPONSEDATA._serialized_end=558
  _IDENTITYCHALLENGEDATA._serialized_start=560
  _IDENTITYCHALLENGEDATA._serialized_end=603
  _IDENTITYRESPONSEDATA._serialized_start=605
  _IDENTITYRESPONSEDATA._serialized_end=675
  _RESPONSE._serialized_start=677
  _RESPONSE._serialized_end=719
  _TRANSACTIONVALUE._serialized_start=722
  _TRANSACTIONVALUE._serialized_end=892
  _TRANSACTIONVALUE_TIMEPOINT._serialized_start=850
  _TRANSACTIONVALUE_TIMEPOINT._serialized_end=892
  _CHAINEVENTDATA._serialized_start=894
  _CHAINEVENTDATA._serialized_end=948
  _EMITSHOWINFODATA._serialized_start=951
  _EMITSHOWINFODATA._serialized_end=1079
  _EMITSHOWINFODATA_SHOWINFOTYPE._serialized_start=1035
  _EMITSHOWINFODATA_SHOWINFOTYPE._serialized_end=1079
  _GETBALANCEACKDATA._serialized_start=1081
  _GETBALANCEACKDATA._serialized_end=1146
  _GETPKACKDATA._serialized_start=1148
  _GETPKACKDATA._serialized_end=1203
  _REPUBLISHDIDACKDATA._serialized_start=1205
  _REPUBLISHDIDACKDATA._serialized_end=1267
  _RECONNECTACKDATA._serialized_start=1269
  _RECONNECTACKDATA._serialized_end=1333
  _STOPCHARGEDATA._serialized_start=1335
  _STOPCHARGEDATA._serialized_end=1368
# @@protoc_insertion_point(module_scope)
